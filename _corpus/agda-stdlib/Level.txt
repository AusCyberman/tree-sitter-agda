==================
module
==================

module Level where

-- Levels.

open import Agda.Primitive public
  using    (Level; _⊔_)
  renaming (lzero to zero; lsuc to suc)

-- Lifting.

record Lift {a ℓ} (A : Set a) : Set (a ⊔ ℓ) where
  constructor lift
  field lower : A


open Lift public

---

(source_file
    (module (qualified_name))
    (comment)
    (open (qualified_name)
        (import_directive)
        (import_directive (name) (name))
        (import_directive
            (renaming (name) (name))
            (renaming (name) (name))))
    (comment)
    (record (qualified_name)
        (untyped_binding
            (atom (qualified_name))
            (atom (qualified_name)))
        (typed_binding
            (atom (qualified_name))
            (expr
                (atom)
                (atom (qualified_name))))
        (expr
            (atom)
            (atom (expr
                (atom (qualified_name))
                (atom (qualified_name))
                (atom (qualified_name)))))
        (record_declarations_block
            (record_constructor (name))
            (field
                (type_sig (arg_name (name)) (expr (atom (qualified_name)))))))
    (open (qualified_name)
        (import_directive)))
