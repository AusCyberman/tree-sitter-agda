==================
module imports
==================

module Algebra where

open import Relation.Binary
open import Algebra.FunctionProperties
open import Algebra.Structures
open import Function
open import Level

---

(source_file
    (module (qualified_name))
    (open (qualified_name))
    (open (qualified_name))
    (open (qualified_name))
    (open (qualified_name))
    (open (qualified_name)))

==================
semigroups
==================

record Semigroup c ℓ : Set (suc (c ⊔ ℓ)) where
  infixl 7 _∙_
  infix  4 _≈_
  field
    Carrier     : Set c
    _≈_         : Rel Carrier ℓ
    _∙_         : Op₂ Carrier
    isSemigroup : IsSemigroup _≈_ _∙_

  open IsSemigroup isSemigroup public

---

(source_file
    (record
        (qualified_name)
            (untyped_binding (name))
            (untyped_binding (name))
            (expr (atom) (atom (expr
                (atom (qualified_name))
                (atom (expr (atom (qualified_name))
                (atom (qualified_name))
                (atom (qualified_name)))))))
        (record_declarations_block
            (infix (integer) (name))
            (infix (integer) (name))
            (field
                (arg_type_signature (arg_name (name)) (expr (atom) (atom (qualified_name))))
                (arg_type_signature (arg_name (name)) (expr        (atom (qualified_name)) (atom (qualified_name)) (atom (qualified_name))))
                (arg_type_signature (arg_name (name)) (expr        (atom (qualified_name)) (atom (qualified_name))))
                (arg_type_signature (arg_name (name)) (expr        (atom (qualified_name)) (atom (qualified_name)) (atom (qualified_name)))))
            (open (qualified_name) (atom (qualified_name)) (import_directive)))))
