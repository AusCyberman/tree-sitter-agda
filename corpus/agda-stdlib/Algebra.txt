==================
module imports
==================

module Algebra where

open import Relation.Binary
open import Algebra.FunctionProperties
open import Algebra.Structures
open import Function
open import Level

---

(source_file
    (module (module_name))
    (open (qualified_name))
    (open (qualified_name))
    (open (qualified_name))
    (open (qualified_name))
    (open (qualified_name)))

==================
semigroups
==================

-- Semigroups, (commutative) monoids and (abelian) groups
record Semigroup c ℓ : Set (suc (c ⊔ ℓ)) where
  infixl 7 _∙_
  infix  4 _≈_
  field
    Carrier     : Set c
    _≈_         : Rel Carrier ℓ
    _∙_         : Op₂ Carrier
    isSemigroup : IsSemigroup _≈_ _∙_

  open IsSemigroup isSemigroup public

---

(source_file
    (comment)
    (record
        (record_name (qualified_name))
            (untyped_binding (name))
            (untyped_binding (name))
            (expr (atom) (atom (expr
                (atom (qualified_name))
                (atom (expr (atom (qualified_name))
                (atom (qualified_name))
                (atom (qualified_name)))))))
        (record_declarations_block
            (infix (integer) (name))
            (infix (integer) (name))
            (field
                (type_sig (arg_name (name)) (expr (atom) (atom (qualified_name))))
                (type_sig (arg_name (name)) (expr        (atom (qualified_name)) (atom (qualified_name)) (atom (qualified_name))))
                (type_sig (arg_name (name)) (expr        (atom (qualified_name)) (atom (qualified_name))))
                (type_sig (arg_name (name)) (expr        (atom (qualified_name)) (atom (qualified_name)) (atom (qualified_name)))))
            (open (qualified_name) (atom (qualified_name)) (import_directive)))))

==================
raw monoid
==================

-- A raw monoid is a monoid without any laws.

record RawMonoid c ℓ : Set (suc (c ⊔ ℓ)) where
  infixl 7 _∙_
  infix  4 _≈_
  field
    Carrier : Set c
    _≈_     : Rel Carrier ℓ
    _∙_     : Op₂ Carrier
    ε       : Carrier

---

(source_file
    (comment)
    (record
        (record_name (qualified_name))
            (untyped_binding (name))
            (untyped_binding (name))
            (expr (atom) (atom (expr
                (atom (qualified_name))
                (atom (expr (atom (qualified_name))
                (atom (qualified_name))
                (atom (qualified_name)))))))
        (record_declarations_block
            (infix (integer) (name))
            (infix (integer) (name))
            (field
                (type_sig (arg_name (name)) (expr (atom) (atom (qualified_name))))
                (type_sig (arg_name (name)) (expr        (atom (qualified_name)) (atom (qualified_name)) (atom (qualified_name))))
                (type_sig (arg_name (name)) (expr        (atom (qualified_name)) (atom (qualified_name))))
                (type_sig (arg_name (name)) (expr        (atom (qualified_name))))))))

==================
monoid
==================

record Monoid c ℓ : Set (suc (c ⊔ ℓ)) where
  infixl 7 _∙_
  infix  4 _≈_
  field
    Carrier  : Set c
    _≈_      : Rel Carrier ℓ
    _∙_      : Op₂ Carrier
    ε        : Carrier
    isMonoid : IsMonoid _≈_ _∙_ ε

  open IsMonoid isMonoid public

  semigroup : Semigroup _ _
  semigroup = record { isSemigroup = isSemigroup }

  rawMonoid : RawMonoid _ _
  rawMonoid = record
    { _≈_ = _≈_
    ; _∙_ = _∙_
    ; ε   = ε
    }


---

(source_file
    (record
        (record_name (qualified_name))
            (untyped_binding (name))
            (untyped_binding (name))
            (expr (atom) (atom (expr
                (atom (qualified_name))
                (atom (expr (atom (qualified_name))
                (atom (qualified_name))
                (atom (qualified_name)))))))
        (record_declarations_block
            (infix (integer) (name))
            (infix (integer) (name))
            (field
                (type_sig (arg_name (name)) (expr (atom) (atom (qualified_name))))
                (type_sig (arg_name (name)) (expr        (atom (qualified_name)) (atom (qualified_name)) (atom (qualified_name))))
                (type_sig (arg_name (name)) (expr        (atom (qualified_name)) (atom (qualified_name))))
                (type_sig (arg_name (name)) (expr        (atom (qualified_name))))
                (type_sig (arg_name (name)) (expr        (atom (qualified_name)) (atom (qualified_name)) (atom (qualified_name)) (atom (qualified_name)))))
            (open (qualified_name) (atom (qualified_name)) (import_directive))
            (function_clause
                (lhs (function_name (qualified_name)))
                (rhs (expr (atom (qualified_name)) (atom) (atom))))
            (function_clause
                (lhs (atom (qualified_name)))
                (rhs (expr (atom
                    (field_assignment (qualified_name) (expr (atom (qualified_name))))))))
            (function_clause
                (lhs (function_name (qualified_name)))
                (rhs (expr (atom (qualified_name)) (atom) (atom))))
            (function_clause
                (lhs (atom (qualified_name)))
                (rhs (expr (atom
                    (field_assignment (qualified_name) (expr (atom (qualified_name))))
                    (field_assignment (qualified_name) (expr (atom (qualified_name))))
                    (field_assignment (qualified_name) (expr (atom (qualified_name)))))))))))
