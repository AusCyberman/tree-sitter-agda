==================
Inline (body in the same line)
==================

f x = let y = x in y

---

(source_file
    (function_clause
        (lhs
            (atom (qualified_name))
            (atom (qualified_name)))
        (rhs
            (expr
                (let
                    (function_clause_test
                        (lhs
                            (atom (qualified_name)))
                        (rhs
                            (expr
                                (atom (qualified_name)))))
                    (expr (atom (qualified_name))))))))

==================
Inline (body after newline)
==================

f x = let y = x
      in y

---

(source_file
    (function_clause
        (lhs
            (atom (qualified_name))
            (atom (qualified_name)))
        (rhs
            (expr
                (let
                    (function_clause_test
                        (lhs
                            (atom (qualified_name)))
                        (rhs
                            (expr
                                (atom (qualified_name)))))
                    (expr (atom (qualified_name))))))))

==================
Block (body in the same line)
==================

f x = let y = x
          y = x in y

---

(source_file
    (function_clause
        (lhs
            (atom (qualified_name))
            (atom (qualified_name)))
        (rhs
            (expr (let
                (function_clause_test
                    (lhs
                        (atom (qualified_name)))
                    (rhs
                        (expr (atom (qualified_name)))))
                (function_clause_test
                    (lhs
                        (atom (qualified_name)))
                    (rhs
                        (expr (atom (qualified_name)))))
                (expr (atom (qualified_name))))))))

==================
Block (body after newline)
==================

f x = let y = x
          y = x
      in y

---

(source_file
    (function_clause
        (lhs
            (atom (qualified_name))
            (atom (qualified_name)))
        (rhs
            (expr (let
                (function_clause_test
                    (lhs
                        (atom (qualified_name)))
                    (rhs
                        (expr (atom (qualified_name)))))
                (function_clause_test
                    (lhs
                        (atom (qualified_name)))
                    (rhs
                        (expr (atom (qualified_name)))))
                (expr (atom (qualified_name))))))))

==================
Cascading (telescope-ish)
==================

f x = let y = x in
      let y = x in y

---

(source_file
    (function_clause
        (lhs
            (atom (qualified_name))
            (atom (qualified_name)))
        (rhs
            (expr
                (let
                    (function_clause_test
                        (lhs
                            (atom (qualified_name)))
                        (rhs
                            (expr (atom (qualified_name)))))
                    (expr
                        (let
                            (function_clause
                                (lhs
                                    (atom (qualified_name)))
                                (rhs
                                    (expr (atom (qualified_name)))))
                            (expr (atom (qualified_name))))))))))
